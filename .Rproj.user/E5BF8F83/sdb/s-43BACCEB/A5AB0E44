{
    "contents" : "detach(package:DAMOCLES, unload = T)\ninstall.packages('d:/data/ms/DAMOCLES_1.1.zip', repos = NULL, type=\"source\")\nlibrary(DAMOCLES)\ndata(NWPrimates_data)\nphy = NWPrimates_data[[1]]\ntest = DAMOCLES_sim(phy, gamma_0=0.1, gamma_td=0, mu=0, sigma=0, psiBranch=0, psiTrait=0,z=0, phi=0, traitOpt=0, br0=0, br_td=0, nTdim=1, root.state=0, root.trait.state=0,plotit = TRUE, keepExtinct = FALSE)\ntest\n\ninstall.packages('d:/data/ms/DAMOCLES_2.0.zip', repos = NULL, type=\"source\")\nlibrary(DAMOCLES)\nload('d:/data/ms/hummingbird_data.rda')\nidparsopt<-c(1,2,5,7,11)\ninitparsopt<-c(0.003,0.003,0.00001,0.00001,1)\nidparsequal<-c(3,4)\nidparsfix<-setdiff(1:12,c(idparsopt,idparsequal))\nparsfix<-rep(0,length(idparsfix))\nmodel<-2\n\nparsFirstRun = DAMOCLES_all_ML(phy,pa,initparsopt = initparsopt, idparsopt = idparsopt,\n    parsfix = parsfix, idparsfix = idparsfix, idparsequal = idparsequal, pars2 = c(1E-6,1E-6,1E-6,10000), optimizer = 'simplex',\n    pchoice = 2, analytical = T, model=2)\n\nparsFirstRun = DAMOCLES_all_ML(phy,pa,initparsopt = initparsopt, idparsopt = idparsopt, parsfix = parsfix, idparsfix = idparsfix, idparsequal = idparsequal, pars2 = c(1E-6,1E-6,1E-6,10000),pchoice = 0, analytical = T, model=2)\n\n\ndetach(package:DDD, unload = T)\ninstall.packages('d:/data/ms/DDD_2.7.zip', repos = NULL, type=\"source\")\nlibrary(DDD)\npars1 = c(0.25,0.12,25.51,1.0,0.16,8.61,9.8)\npars2 = c(200,1,1,18.8,1,2)\nmissnumspec = 0\nbrtsM = c(25.2,24.6,24.0,22.5,21.7,20.4,19.9,19.7,18.8,17.1,15.8,11.8,9.7,8.9,5.7,5.2)\nbrtsS = c(9.6,8.6,7.4,4.9,2.5)\ndd_KI_loglik(pars1,pars2,brtsM,brtsS,missnumspec)\npars1[1] = 0.6\ndd_KI_loglik(pars1,pars2,brtsM,brtsS,missnumspec)\n\nout <- DAMOCLES_sim(\n  phy,\n  gamma_0 = 1.5,\n  gamma_td =0,\n  mu = 0,\n  sigma = 0,\n  psiBranch = 0,\n  psiTrait = 0,\n  z = 10,\n  phi = 0,\n  traitOpt = 1,\n  br0 = 0.1,\n  br_td = -0.1,\n  nTdim = 2,\n  root.state = 1,\n  root.trait.state = 0,\n  plotit = FALSE,\n  keepExtinct = TRUE\n  )\n  \n  \nsetwd('d:/data/ms/')\n\nlibrary(DAMOCLES)\nload(\"test_data.rda\")#contains objects \"phy\" and \"pa\"\n\nedgeObj<-compute_edgeTList(phy)\n\npars = rep(0.1,11)\n\nsystem.time(for(i in 1:1000){DAMOCLES_env_trait_loglik(phy,pa,pars=pars,pchoice = 0,edgeTList = edgeObj,analytical = T)})\n\nsystem.time(for(i in 1:1000){DAMOCLES_all_loglik(\n   phy,\n   pa,\n   pars=pars,\n   pchoice = 0,\n   edgeTList = edgeObj,\n   analytical = T,\n   model = 2 \n   )}\n)\n\n\nl = lineprof(DAMOCLES_all_loglik(\n   phy,\n   pa,\n   pars=pars,\n   pchoice = 0,\n   edgeTList = edgeObj,\n   analytical = T,\n   model = 2 \n   ))\n\nf = function(n)\n{\nmodel = 2   \nmats = DAMOCLES_mats(pars,model)\nfor(i in 1:n){DAMOCLES_all_loglik(\n   phy,\n   pa,\n   pars=pars+i/(10*n),\n   pchoice = 0,\n   edgeTList = edgeObj,\n   analytical = T,\n   model = model, \n   M = mats[[1]],\n   S = mats[[2]],\n   invS = mats[[3]],\n   eigs = mats[[4]]   \n   )}\n}\n\nsystem.time(f(100))\n\n\nl = lineprof(DAMOCLES_all_loglik(\n   phy,\n   pa,\n   pars=pars,\n   pchoice = 0,\n   edgeTList = edgeObj,\n   analytical = T,\n   model = model, \n   M = mats[[1]],\n   S = mats[[2]],\n   invS = mats[[3]],\n   eigs = mats[[4]]   \n   ))\n\n\n\nRprof(tmp <- tempfile(),append = F,interval = 0.001,line.profiling = T)\nDAMOCLES_all_loglik(\n   phy,\n   pa,\n   pars=pars,\n   pchoice = 0,\n   edgeTList = edgeObj,\n   analytical = T,\n   model = model, \n   M = mats[[1]],\n   S = mats[[2]],\n   invS = mats[[3]],\n   eigs = mats[[4]]   \n   )\nRprof(interval = 0.001,line.profiling = T)\nsummaryRprof(tmp)\nunlink(tmp)\n\nfn = 'biastest1c-3212'\nstepsize = 20\nfilename = paste('d:/data/ms/biastest/',fn,'.RData',sep = \"\")\nprint(filename)\nload(filename)\nmcstop = floor(length(restot$mc)/4/stepsize)*stepsize\nprint(mcstop)\nrestot0 = restot[1:(4*mcstop),]\n\n#restot0 = NULL\nfor(i in seq(mcstop+1,1000,by = stepsize))\n{\nfilename1 = paste('d:/data/ms/biastest/New/',fn,i,'.RData',sep = \"\")\ntry(load(filename1))\nif(dim(restot)[1] != 4*stepsize) {print(filename1); print(dim(restot)[1]/4)}\nrestot0 = rbind(restot0,restot)\n}\nrestot = restot0\nfilename = paste('d:/data/ms/biastest/',fn,'.RData',sep = \"\")\nsave(restot,file = filename)\n\n#c(141,381,441,461,561,641,741)\n\nfor(i in c(61,73,201,301,303,321,334,341,361,741,881,896))\n{\nfilename1 = paste('d:/data/ms/biastest/New/',fn,i,'.RData',sep = \"\")\nprint(filename1)\ntry(load(filename1))\nprint(dim(restot))\nprint(restot$mc)\n}\n\nfn = 'biastest1c-3212'\ni = 61\nfilename1 = paste('d:/data/ms/biastest/New/',fn,i,'.RData',sep = \"\")\nprint(filename1)\ntry(load(filename1))\nrestot0 = restot\nj = 81 - i\nrestot0 = rbind(restot0,restot0[1:4,])\nrestot0[((j - 1)*4 + 1):(j * 4),2] = i + j - 1 \nrestot0[((j - 1)*4 + 1):(j * 4),3:20] = -1 \nfilename2 = paste('d:/data/ms/biastest/New/',fn,i + j,'.RData',sep = \"\")\nprint(filename2)\ntry(load(filename2))\nprint(dim(restot))\nrestot0 = rbind(restot0,restot)\nprint(restot0$mc)\nrestot = restot0\nsave(restot,file = filename1)\n\nsource('d:/data/Shared folders/lat_divdep/conditioning_Rcode/checkforruncompletionGroningen.R')\n\nlibrary(ape)\nsource('d:/data/ms/biastest/plot_params.R')\n\nlibrary(PBD)\nsource('d:/data/ms/PBD/R/pbd_utils.R')\nsource('d:/data/ms/PBD/R/pbd_sim2.R')\nfor(i in 1:1)\n{\nset.seed(i)\nout = pbd_sim2(pars = c(0.2,0.1,0.5,0.1,0.1), age = 10, soc = 2, plot = 1)\n#readline(\"Next?\")\n}\n\n# clear memory\nrm(list = ls()); \nlibrary(DDD)\nlibrary(expmv)     \nlibrary(expoRkit)\nlibrary(expmv);\nlibrary(Matrix);\n# set parameters  of the model\npars = c(0.8,0,200)\nk = 10;\nlambda_0 = pars[1]\nmu_0 = pars[2]\nK = pars[3]\n# set dimensions of the matrix\ndime = 50; \n# define speciation and extinction rates\nKprime = function(pars)\n{\n   return(pars[1] / (pars[1] - pars[2]) * pars[3])\n}\nlambda = function(n,pars)\n{\n    return(pmax(0,pars[1] * (1 - n/Kprime(pars))))\n}\nmu = function(n,pars)\n{\n    return(pars[2] * rep(1,length(n)))\n}\nMMcolsum = function(n,pars,k)\n{\n    return(lambda(n + k,pars) * (2 * n + 3 * k) + pars[2] * (2 * n))\n}\n# compute elements of the matrix\nnvec = 0:(dime - 1);\nlambda_nk = lambda(nvec + k,pars)\nmu_nk = mu(nvec + k,pars);\n# make diagonal matrix\nMM = Diagonal(dime,-(lambda_nk + mu_nk) * (nvec + k));\n# set sub and superdiagonal elements\nMM[row(MM) == col(MM) + 1] = lambda_nk[1:(dime - 1)] * (nvec[1:(dime - 1)] + 2 * k);\nMM[row(MM) == col(MM) - 1] = mu_nk[2:dime] * nvec[2:dime];\n# keep sparse matrix\nMMs = MM\n# convert sparse matrix into normal one\nMM = as.matrix(MM);\n# set the vector v and normalize it.\nQ0 = rep(0,dime);\nQ0[1] = 1;\nQ0 = Q0/sum(Q0);\ndim(Q0) = c(dime,1); \n# compute expmv\nnAm = Kprime(pars)/2 * (1 + mu_0/lambda_0) - 5/4 * k\nnAm = max(MMcolsum(floor(nAm),pars,k),MMcolsum(ceiling(nAm),pars,k))\nprint(nAm)\nprint(norm(MM))\nM = select_taylor_degree(MM,Q0,nAm = nAm);\nsystem.time(expmv(t = 1,A = MM,b = Q0,M = M$M)$f)\nQ1 = expmv(t = 1,A = MM,b = Q0,M = M$M)$f;\naux = aux = (2:(length(Q0)+1)) * (3:(length(Q0)+2))/6\nQ1 = Q1/aux\n# print the sum of probabilities\nprint(sum(Q1))\n# use DDD\nsystem.time(ode(Q0,c(0,1),dd_loglik_rhs,c(pars,k,1),method = 'lsoda'))\ny = ode(Q0,c(0,1),dd_loglik_rhs,c(pars,k,1),method = 'lsoda')\nQ2 = y[2,2:(length(Q0)+1)]\nQ2 = Q2/aux\nprint(sum(Q2))\n# use expoRkit\nsystem.time(expoRkit::expv(MMs,Q0))\nQ3 = expoRkit::expv(MMs,Q0)\nQ3 = Q3/aux\nprint(sum(Q3))\nprint(MMs)\nsource('d:/data/ms/DDD/R/dd_loglik_M.R')\nQ4 = dd_loglik_M2(pars,dime,k,ddep = 1,Q0)\nQ4 = Q4/aux\nprint(sum(Q4))\nddep = 4.2\nprint(lambdamu((0:(dime - 1)) + k,c(pars,0),ddep))\nprint(flavec(ddep,la = pars[1],mu = pars[2],K = pars[3],r = 0,lx = dime,kk = k,n0 = 0))\n\n#MM[row(MM) == col(MM) + 1] = lambda_n[1:(dime - 1) * nvec[1:(dime - 1)]\n#MM[row(MM) == col(MM) - 1] = mu_n[2:dime] * nvec[2:dime]\n# nAm = (lambda_0 + mu)^2/lambda_0*Kprime/2;\n\n\n\nfor(mc in 1:endmc)\n{\n   print(mc)\n   brtsDD = branching.times(treeDD[[mc]][[1]])\n   outCR = dd_ML(brtsDD,initparsopt = parsCR, idparsopt = 1:2, idparsfix = 3, parsfix = Inf, ddmodel = 1,cond = 1)   \n   outDD1 = dd_ML(brtsDD,initparsopt = parsDD, idparsopt = 1:3, ddmodel = 1,cond = 1)\n   outDD2 = dd_ML(brtsDD,initparsopt = c(parsCR + 0.05,length(brts) + 1000), idparsopt = 1:3, ddmodel = 1,cond = 1)   \n   outff = cbind(1,mc,outCR,outDD1,outDD2,max(0,max(outDD1$loglik,outDD2$loglik) - outCR$loglik))\n   outff = outff[,-c(5,7,13,19)]\n   names(outff) = newnames\n   out = rbind(out,outff)  \n   save(seed,brts,out,treeCR,treeDD,file = filename)\n}\n\nbrts = as.numeric(read.table('d:/data/xls/Dendroica_branchtimes.csv',sep = \",\"))\nfilename = 'd:/data/ms/posterior/DendroicaLRtest2.RData'\nendmc = 1000;\nseed = 42;\nmissnumspec = 0;\ninitparsoptCR = c(0.8,0.05)\ninitparsoptDD = c(3,0.2,30)\nlibrary(DDD)\nlibrary(PBD)\nsource('d:/data/ms/DDD/R/dd_LR.R')\nsource('d:/data/ms/DDD/R/dd_utils.R')\nout = dd_LR(\n   brts = brts,\n   initparsoptDD = initparsoptDD,\n   initparsoptCR = initparsoptCR,\n   missnumspec = missnumspec,\n   outputfilename = filename,\n   seed = seed,\n   endmc = endmc,\n   alpha = 0.05,\n   plotit = TRUE,\n   res = 10 * (1 + length(brts) + missnumspec),\n   ddmodel = 1,\n   cond = 1,\n   btorph = 1,\n   soc = 2,\n   tol = c(1E-6,1E-6,1E-6),\n   maxiter = 2000,\n   changeloglikifnoconv = FALSE\n   )\n\n\nfor(mc in 477:endmc)\n{\n   print(mc)\n   brtsCR = branching.times(treeCR[[mc]][[1]])\n   outDD2 = dd_ML(brtsCR,initparsopt = c(parsCR + 0.05,length(brts) + 1000), idparsopt = 1:3, ddmodel = 1,cond = 1)\n   out[mc + 1,12:17] = c(outDD2[c(1:4,6)],max(0,max(out[mc + 1,10],outDD2$loglik) - out[mc + 1,5]))\n   save(seed,brts,out,treeCR,treeDD,file = filename)\n}\n\nfor(mc in 1:endmc)\n{\n   print(mc)\n   brtsDD = branching.times(treeDD[[mc]][[1]])\n   outCR = dd_ML(brtsDD,initparsopt = parsCR, idparsopt = 1:2, idparsfix = 3, parsfix = Inf, ddmodel = 1,cond = 1)   \n   outDD1 = dd_ML(brtsDD,initparsopt = parsDD, idparsopt = 1:3, ddmodel = 1,cond = 1)\n   outDD2 = dd_ML(brtsDD,initparsopt = c(parsCR + 0.05,length(brts) + 1000), idparsopt = 1:3, ddmodel = 1,cond = 1)   \n   outff = cbind(1,mc,outCR,outDD1,outDD2,max(0,max(outDD1$loglik,outDD2$loglik) - outCR$loglik))\n   outff = outff[,-c(5,7,13,19)]\n   names(outff) = newnames\n   out = rbind(out,outff)  \n   save(seed,brts,out,treeCR,treeDD,file = filename)\n}\n\n\nopt = rep(0,2*endmc + 1)\nfor(i in 2:(1 + 2*endmc))\n{\n     if(out$conv_DD1[i] == -1 & out$conv_DD2[i] == -1)\n     {\n        maxLLDD = out$LL_CR[i]\n        opt[i] = 1\n     } else if(out$conv_DD1[i] == -1 & out$conv_DD2[i] != -1)\n     {\n        maxLLDD = out$LL_DD2[i]\n        opt[i] = 3        \n     } else if(out$conv_DD1[i] != -1 & out$conv_DD2[i] == -1)\n     {\n        maxLLDD = out$LL_DD1[i]\n        opt[i] = 2        \n     } else {\n        maxLLDD = max(out$LL_DD1[i],out$LL_DD2[i])\n        opt[i] = 1 + min(which(c(out$LL_DD1[i],out$LL_DD2[i]) == maxLLDD))\n     }\n     LR = max(0,maxLLDD - out$LL_CR[i])\n     out$LR[i] = LR\n}\n\n\nDDD_0<-dd_ML(branching.times(Troidini), ddmodel=1, initparsopt=c(1), idparsopt = 1,parsfix = c(0,Inf), idparsfix = c(2,3), res=1000, missnumspec= 4, cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.159800, mu: 0.000000, K: Inf \n# Maximum loglikelihood: -92.894957  \n\nDDD_0 <- dd_ML(brtsi, ddmodel=1, initparsopt=c(0.05,0.01), idparsopt=c(1,2), idparsfix=c(3), parsfix=c(Inf), res=resi, missnumspec=missnumspec[i], cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.205880, mu: 0.092936, K: Inf \n# Maximum loglikelihood: -92.478933 \n\nDDD_1<-dd_ML(brtsi, ddmodel=1, initparsopt=c(0.05,initi), idparsopt=c(1,3), idparsfix=c(2), parsfix=c(0), res=resi, missnumspec=missnumspec[i], cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.161785, mu: 0.000000, K: Inf \n# Maximum loglikelihood: -92.877138 \n\nDDD_2<-dd_ML(brtsi, ddmodel=1, initparsopt=c(0.05,0.001,initi), res=resi, missnumspec= missnumspec[i], cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.161821, mu: 0.000062, K: Inf \n# Maximum loglikelihood: -92.876617 \n\nDDD_2<-dd_ML(branching.times(Troidini), ddmodel=1, initparsopt=c(1000,1,39), res=1000, missnumspec= 4, cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 2181887236.354137, mu: 0.353277, K: 37.789193 \n# Maximum loglikelihood: -94.003412 \n\nDDD_2<-dd_ML(branching.times(Troidini), ddmodel=1, initparsopt=c(1,0.1,138), res=1000, missnumspec= 4, cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.286236, mu: 0.146481, K: 66.662111 \n# Maximum loglikelihood: -92.382026 \n\nDDD_2<-dd_ML(branching.times(Troidini), ddmodel=1, initparsopt=c(0.05,0.001,39), res=1000, missnumspec= 4, cond=1, btorph=1, soc=2, maxiter=1000)\n# Maximum likelihood parameter estimates: lambda: 0.110495, mu: 0.000000, K: Inf \n# Maximum loglikelihood: -95.011442 \n\nDDD_5<-dd_ML(branching.times(Troidini), ddmodel=4, initparsopt=c(0.2,0.1,39), res=1000, missnumspec= 4, cond=1, btorph=1, soc=2, maxiter=1000)                                                                      \n\ndata1.abun = c(1717,1681,983,788,755,724,681,644,617,381,379,376,364,346,345,325,322,294,289,288,285,264,248,244,236,236,229,218,203,201,188,184,177,167,164,163,156,149,147,143,121,118,111,101,100,99,98,98,98,93,92,92,88,87,85,85,82,81,80,78,76,70,68,68,67,67,64,63,63,61,58,55,55,55,54,52,52,51,50,49,47,45,45,43,43,41,40,39,39,38,38,36,33,33,33,33,33,32,31,30,29,29,28,28,28,27,27,27,26,26,26,26,25,25,25,25,23,23,23,23,22,22,22,21,21,21,21,20,19,18,17,16,16,16,15,15,15,14,14,14,13,13,13,13,13,12,12,12,12,12,12,12,10,10,10,10,10,10,10,9,9,8,8,8,7,7,7,7,7,7,6,5,5,5,5,5,5,5,5,4,4,4,4,4,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\ndata2.abun = c(4103,2274,1085,936,922,855,787,691,509,498,489,485,471,457,423,344,317,286,282,273,236,224,208,201,196,194,186,181,159,156,153,153,151,133,126,121,119,118,116,108,97,95,95,91,83,81,81,80,79,79,78,74,71,70,69,68,67,61,61,61,58,58,56,53,53,52,52,51,49,49,47,47,47,46,45,45,44,44,44,44,44,42,39,38,37,37,36,36,35,35,35,35,35,34,34,32,31,31,30,30,30,29,29,29,29,29,28,28,28,27,26,26,25,24,24,23,22,22,22,21,21,20,20,19,18,18,17,16,16,16,15,15,15,15,15,15,14,13,13,13,12,12,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\ndata3.abun = c(570,564,522,522,355,342,324,322,313,288,277,271,270,269,267,263,248,231,227,227,215,215,211,205,205,202,200,200,195,193,192,181,176,175,174,169,163,159,152,151,147,147,142,134,134,133,133,128,126,126,125,125,123,123,121,120,118,118,117,115,115,115,114,108,107,105,105,100,98,97,96,95,94,93,91,90,90,89,89,89,89,88,88,87,85,83,82,81,81,81,80,79,77,77,76,75,73,73,72,67,67,67,67,66,66,66,65,63,63,63,63,63,62,62,61,60,60,59,59,59,59,58,58,58,57,56,56,56,56,56,55,54,54,53,53,53,53,52,52,52,51,51,51,51,51,50,50,49,49,49,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,44,43,43,43,43,43,43,42,42,42,41,41,41,40,40,40,40,40,40,39,39,39,39,38,38,38,37,37,37,36,36,36,36,35,35,34,34,34,34,33,33,33,33,33,33,32,32,32,32,32,31,31,31,31,30,30,30,29,29,29,29,29,29,28,28,28,28,28,28,27,27,27,27,27,27,27,27,26,26,25,25,25,25,25,25,25,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,22,22,22,22,22,21,21,21,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,19,19,19,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\ndata4.abun = c(2066,1684,1269,729,673,583,523,504,427,387,360,343,321,306,297,288,262,244,241,194,193,163,160,157,154,150,149,147,147,147,138,137,117,114,107,106,101,99,96,90,87,84,78,78,72,72,68,68,68,66,66,64,61,60,54,53,52,52,51,50,47,46,44,40,40,39,37,37,36,35,34,32,29,26,25,25,24,24,23,22,22,21,21,21,21,21,19,18,17,17,17,17,15,15,15,14,14,14,13,13,11,11,10,10,10,10,9,9,8,8,8,7,7,7,6,6,6,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\ndata5.abun = c(1808,780,462,426,405,363,224,206,203,197,186,157,142,142,136,133,133,127,126,124,117,114,114,112,104,102,102,100,98,97,95,95,91,90,86,83,82,81,77,75,74,71,70,68,67,67,67,67,66,66,65,65,65,64,63,61,61,59,58,55,55,54,53,53,52,52,52,52,52,50,50,49,49,49,48,47,47,46,45,45,45,43,43,43,42,41,41,41,41,40,40,40,40,40,39,38,38,38,38,37,37,37,37,37,36,36,35,35,34,34,34,34,34,34,34,33,33,32,32,32,32,32,32,31,30,30,30,30,30,30,29,29,29,29,28,28,28,28,27,27,27,27,26,26,26,26,26,26,25,25,25,24,24,24,23,23,23,23,23,22,22,22,22,22,22,22,22,21,21,21,21,21,21,20,20,20,20,20,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\ndata6.abun = c(784,773,754,648,600,533,512,471,454,407,399,362,311,300,286,282,269,264,236,231,219,207,197,197,189,186,184,169,163,162,152,150,148,148,146,141,140,139,138,138,135,131,129,120,119,118,118,116,114,114,113,111,111,108,107,106,106,105,103,103,103,102,101,101,99,99,96,93,92,92,90,89,88,88,88,87,87,85,85,85,84,83,82,81,81,81,78,78,76,76,75,75,75,74,73,71,71,71,70,69,69,69,68,68,67,66,66,66,66,66,66,66,66,65,65,65,64,64,64,64,64,63,62,62,62,62,61,61,60,60,60,59,59,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,54,53,53,53,53,53,52,52,52,51,51,51,51,50,50,50,49,49,49,49,48,48,47,47,47,47,47,47,47,47,46,46,46,46,46,46,46,46,45,45,45,44,44,44,43,43,43,43,43,43,42,42,41,41,41,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37,37,37,37,37,37,37,37,36,36,36,36,36,35,35,35,35,35,35,35,34,34,34,34,34,33,33,33,33,33,33,32,32,32,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,31,31,30,30,30,30,30,30,30,30,29,29,29,29,29,29,29,29,29,29,28,28,28,28,28,28,28,28,28,27,27,27,27,27,27,27,27,27,26,26,26,26,25,25,25,25,25,25,25,24,24,24,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,23,23,23,23,22,22,22,22,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,21,21,21,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);\n\ndata1.paropt = c(4.793930230665386e+01, 2.174825700126286e+03);\ndata2.paropt = c(5.287601750751814e+01, 2.929024039743966e+04);\ndata3.paropt = c(1.914448632942763e+02, 2.688788313355463e+03);\ndata4.paropt = c(4.397514312045057e+02, 3.245344873778900e+01);\ndata5.paropt = c(2.044324997466665e+02, 1.311305778464316e+04);\ndata6.paropt = c(2.860057917758230e+02, 4.280213532075853e+03);\n\ndata1.llikopt = c(-3.177003481679452e+02);\ndata2.llikopt = c(-3.260890848982295e+02);\ndata3.llikopt = c(-3.679023234112974e+02);\ndata4.llikopt = c(-2.620034924167350e+02);\ndata5.llikopt = c(-3.051992510684921e+02);\ndata6.llikopt = c(-3.949258213635832e+02);\n\nlibrary(subplex)\nsource('d:/data/ms/pm_indep_loglik2.R')\nllikcalc = rep(0,6);\ndatalist = list(data1.abun,data2.abun,data3.abun,data4.abun,data5.abun,data6.abun)\nparslist = list(data1.paropt,data2.paropt,data3.paropt,data4.paropt,data5.paropt,data6.paropt)\nf = function(x,dataset) length(which(dataset == x))\nfor(ctr in 1:6)\n{\n  nn = datalist[[ctr]]\n  nu = unique(nn);\n  ss = apply(X = as.matrix(nu), MARGIN = 1, FUN = f, dataset = nn)\n  pars = parslist[[ctr]]\n  llikcalc[ctr] = pm_indep_loglik(log(pars[1]),log(pars[2]),nn,nu,ss);\n}\n\nllikcalc",
    "created" : 1453497172082.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3309061259",
    "id" : "A5AB0E44",
    "lastKnownWriteTime" : 1453497678,
    "path" : "D:/data/Ms/testR.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}